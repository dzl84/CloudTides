// Code generated by go-swagger; DO NOT EDIT.

package hosts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"lhj-broker/pkg/models"
)

// FindHostsOKCode is the HTTP code returned for type FindHostsOK
const FindHostsOKCode int = 200

/*FindHostsOK list the hosts

swagger:response findHostsOK
*/
type FindHostsOK struct {

	/*
	  In: Body
	*/
	Payload []*FindHostsOKBodyItems0 `json:"body,omitempty"`
}

// NewFindHostsOK creates FindHostsOK with default headers values
func NewFindHostsOK() *FindHostsOK {

	return &FindHostsOK{}
}

// WithPayload adds the payload to the find hosts o k response
func (o *FindHostsOK) WithPayload(payload []*FindHostsOKBodyItems0) *FindHostsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find hosts o k response
func (o *FindHostsOK) SetPayload(payload []*FindHostsOKBodyItems0) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindHostsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*FindHostsOKBodyItems0, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*FindHostsDefault generic error response

swagger:response findHostsDefault
*/
type FindHostsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewFindHostsDefault creates FindHostsDefault with default headers values
func NewFindHostsDefault(code int) *FindHostsDefault {
	if code <= 0 {
		code = 500
	}

	return &FindHostsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the find hosts default response
func (o *FindHostsDefault) WithStatusCode(code int) *FindHostsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the find hosts default response
func (o *FindHostsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the find hosts default response
func (o *FindHostsDefault) WithPayload(payload *models.Error) *FindHostsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find hosts default response
func (o *FindHostsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindHostsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
