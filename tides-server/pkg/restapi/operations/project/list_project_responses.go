// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// ListProjectOKCode is the HTTP code returned for type ListProjectOK
const ListProjectOKCode int = 200

/*ListProjectOK OK

swagger:response listProjectOK
*/
type ListProjectOK struct {

	/*
	  In: Body
	*/
	Payload []*ListProjectOKBodyItems0 `json:"body,omitempty"`
}

// NewListProjectOK creates ListProjectOK with default headers values
func NewListProjectOK() *ListProjectOK {

	return &ListProjectOK{}
}

// WithPayload adds the payload to the list project o k response
func (o *ListProjectOK) WithPayload(payload []*ListProjectOKBodyItems0) *ListProjectOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list project o k response
func (o *ListProjectOK) SetPayload(payload []*ListProjectOKBodyItems0) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListProjectOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*ListProjectOKBodyItems0, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListProjectUnauthorizedCode is the HTTP code returned for type ListProjectUnauthorized
const ListProjectUnauthorizedCode int = 401

/*ListProjectUnauthorized Unauthorized

swagger:response listProjectUnauthorized
*/
type ListProjectUnauthorized struct {
}

// NewListProjectUnauthorized creates ListProjectUnauthorized with default headers values
func NewListProjectUnauthorized() *ListProjectUnauthorized {

	return &ListProjectUnauthorized{}
}

// WriteResponse to the client
func (o *ListProjectUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
