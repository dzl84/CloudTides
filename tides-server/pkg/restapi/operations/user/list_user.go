// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ListUserHandlerFunc turns a function with the right signature into a list user handler
type ListUserHandlerFunc func(ListUserParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListUserHandlerFunc) Handle(params ListUserParams) middleware.Responder {
	return fn(params)
}

// ListUserHandler interface for that can handle valid list user params
type ListUserHandler interface {
	Handle(ListUserParams) middleware.Responder
}

// NewListUser creates a new http.Handler for the list user operation
func NewListUser(ctx *middleware.Context, handler ListUserHandler) *ListUser {
	return &ListUser{Context: ctx, Handler: handler}
}

/* ListUser swagger:route GET /user user listUser

list User

*/
type ListUser struct {
	Context *middleware.Context
	Handler ListUserHandler
}

func (o *ListUser) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewListUserParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// ListUserOKBodyItems0 list user o k body items0
//
// swagger:model ListUserOKBodyItems0
type ListUserOKBodyItems0 struct {

	// email
	Email string `json:"email,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// org name
	OrgName string `json:"orgName,omitempty"`

	// phone
	Phone string `json:"phone,omitempty"`

	// role
	Role string `json:"role,omitempty"`
}

// Validate validates this list user o k body items0
func (o *ListUserOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list user o k body items0 based on context it is used
func (o *ListUserOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListUserOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListUserOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res ListUserOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
