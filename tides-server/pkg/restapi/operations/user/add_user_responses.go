// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// AddUserOKCode is the HTTP code returned for type AddUserOK
const AddUserOKCode int = 200

/*AddUserOK create success

swagger:response addUserOK
*/
type AddUserOK struct {

	/*
	  In: Body
	*/
	Payload *AddUserOKBody `json:"body,omitempty"`
}

// NewAddUserOK creates AddUserOK with default headers values
func NewAddUserOK() *AddUserOK {

	return &AddUserOK{}
}

// WithPayload adds the payload to the add user o k response
func (o *AddUserOK) WithPayload(payload *AddUserOKBody) *AddUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add user o k response
func (o *AddUserOK) SetPayload(payload *AddUserOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddUserUnauthorizedCode is the HTTP code returned for type AddUserUnauthorized
const AddUserUnauthorizedCode int = 401

/*AddUserUnauthorized Unauthorized

swagger:response addUserUnauthorized
*/
type AddUserUnauthorized struct {
}

// NewAddUserUnauthorized creates AddUserUnauthorized with default headers values
func NewAddUserUnauthorized() *AddUserUnauthorized {

	return &AddUserUnauthorized{}
}

// WriteResponse to the client
func (o *AddUserUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// AddUserForbiddenCode is the HTTP code returned for type AddUserForbidden
const AddUserForbiddenCode int = 403

/*AddUserForbidden Forbidden

swagger:response addUserForbidden
*/
type AddUserForbidden struct {

	/*
	  In: Body
	*/
	Payload *AddUserForbiddenBody `json:"body,omitempty"`
}

// NewAddUserForbidden creates AddUserForbidden with default headers values
func NewAddUserForbidden() *AddUserForbidden {

	return &AddUserForbidden{}
}

// WithPayload adds the payload to the add user forbidden response
func (o *AddUserForbidden) WithPayload(payload *AddUserForbiddenBody) *AddUserForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add user forbidden response
func (o *AddUserForbidden) SetPayload(payload *AddUserForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddUserForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
