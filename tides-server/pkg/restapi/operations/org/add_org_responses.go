// Code generated by go-swagger; DO NOT EDIT.

package org

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// AddOrgOKCode is the HTTP code returned for type AddOrgOK
const AddOrgOKCode int = 200

/*AddOrgOK create success

swagger:response addOrgOK
*/
type AddOrgOK struct {

	/*
	  In: Body
	*/
	Payload *AddOrgOKBody `json:"body,omitempty"`
}

// NewAddOrgOK creates AddOrgOK with default headers values
func NewAddOrgOK() *AddOrgOK {

	return &AddOrgOK{}
}

// WithPayload adds the payload to the add org o k response
func (o *AddOrgOK) WithPayload(payload *AddOrgOKBody) *AddOrgOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add org o k response
func (o *AddOrgOK) SetPayload(payload *AddOrgOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddOrgOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddOrgUnauthorizedCode is the HTTP code returned for type AddOrgUnauthorized
const AddOrgUnauthorizedCode int = 401

/*AddOrgUnauthorized Unauthorized

swagger:response addOrgUnauthorized
*/
type AddOrgUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *AddOrgUnauthorizedBody `json:"body,omitempty"`
}

// NewAddOrgUnauthorized creates AddOrgUnauthorized with default headers values
func NewAddOrgUnauthorized() *AddOrgUnauthorized {

	return &AddOrgUnauthorized{}
}

// WithPayload adds the payload to the add org unauthorized response
func (o *AddOrgUnauthorized) WithPayload(payload *AddOrgUnauthorizedBody) *AddOrgUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add org unauthorized response
func (o *AddOrgUnauthorized) SetPayload(payload *AddOrgUnauthorizedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddOrgUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddOrgForbiddenCode is the HTTP code returned for type AddOrgForbidden
const AddOrgForbiddenCode int = 403

/*AddOrgForbidden Forbidden

swagger:response addOrgForbidden
*/
type AddOrgForbidden struct {

	/*
	  In: Body
	*/
	Payload *AddOrgForbiddenBody `json:"body,omitempty"`
}

// NewAddOrgForbidden creates AddOrgForbidden with default headers values
func NewAddOrgForbidden() *AddOrgForbidden {

	return &AddOrgForbidden{}
}

// WithPayload adds the payload to the add org forbidden response
func (o *AddOrgForbidden) WithPayload(payload *AddOrgForbiddenBody) *AddOrgForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add org forbidden response
func (o *AddOrgForbidden) SetPayload(payload *AddOrgForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddOrgForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
