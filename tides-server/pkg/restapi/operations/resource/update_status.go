// Code generated by go-swagger; DO NOT EDIT.

package resource

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UpdateStatusHandlerFunc turns a function with the right signature into a update status handler
type UpdateStatusHandlerFunc func(UpdateStatusParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateStatusHandlerFunc) Handle(params UpdateStatusParams) middleware.Responder {
	return fn(params)
}

// UpdateStatusHandler interface for that can handle valid update status params
type UpdateStatusHandler interface {
	Handle(UpdateStatusParams) middleware.Responder
}

// NewUpdateStatus creates a new http.Handler for the update status operation
func NewUpdateStatus(ctx *middleware.Context, handler UpdateStatusHandler) *UpdateStatus {
	return &UpdateStatus{Context: ctx, Handler: handler}
}

/*UpdateStatus swagger:route PUT /resource/update_status resource updateStatus

update the status of resource: busy, normal, idle

*/
type UpdateStatus struct {
	Context *middleware.Context
	Handler UpdateStatusHandler
}

func (o *UpdateStatus) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdateStatusParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// UpdateStatusBody update status body
//
// swagger:model UpdateStatusBody
type UpdateStatusBody struct {

	// monitored
	Monitored bool `json:"monitored,omitempty"`

	// resource Id
	ResourceID int64 `json:"resourceId,omitempty"`

	// status
	Status string `json:"status,omitempty"`
}

// Validate validates this update status body
func (o *UpdateStatusBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateStatusBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateStatusBody) UnmarshalBinary(b []byte) error {
	var res UpdateStatusBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// UpdateStatusOKBody update status o k body
//
// swagger:model UpdateStatusOKBody
type UpdateStatusOKBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this update status o k body
func (o *UpdateStatusOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateStatusOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateStatusOKBody) UnmarshalBinary(b []byte) error {
	var res UpdateStatusOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
