// Code generated by go-swagger; DO NOT EDIT.

package resource

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// ResourceVMsInfoOKCode is the HTTP code returned for type ResourceVMsInfoOK
const ResourceVMsInfoOKCode int = 200

/*ResourceVMsInfoOK get detailed info of VMs belonging to a user

swagger:response resourceVMsInfoOK
*/
type ResourceVMsInfoOK struct {

	/*
	  In: Body
	*/
	Payload *ResourceVMsInfoOKBody `json:"body,omitempty"`
}

// NewResourceVMsInfoOK creates ResourceVMsInfoOK with default headers values
func NewResourceVMsInfoOK() *ResourceVMsInfoOK {

	return &ResourceVMsInfoOK{}
}

// WithPayload adds the payload to the resource v ms info o k response
func (o *ResourceVMsInfoOK) WithPayload(payload *ResourceVMsInfoOKBody) *ResourceVMsInfoOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the resource v ms info o k response
func (o *ResourceVMsInfoOK) SetPayload(payload *ResourceVMsInfoOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ResourceVMsInfoOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ResourceVMsInfoUnauthorizedCode is the HTTP code returned for type ResourceVMsInfoUnauthorized
const ResourceVMsInfoUnauthorizedCode int = 401

/*ResourceVMsInfoUnauthorized Unauthorized

swagger:response resourceVMsInfoUnauthorized
*/
type ResourceVMsInfoUnauthorized struct {
}

// NewResourceVMsInfoUnauthorized creates ResourceVMsInfoUnauthorized with default headers values
func NewResourceVMsInfoUnauthorized() *ResourceVMsInfoUnauthorized {

	return &ResourceVMsInfoUnauthorized{}
}

// WriteResponse to the client
func (o *ResourceVMsInfoUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// ResourceVMsInfoNotFoundCode is the HTTP code returned for type ResourceVMsInfoNotFound
const ResourceVMsInfoNotFoundCode int = 404

/*ResourceVMsInfoNotFound resource not found

swagger:response resourceVMsInfoNotFound
*/
type ResourceVMsInfoNotFound struct {

	/*
	  In: Body
	*/
	Payload *ResourceVMsInfoNotFoundBody `json:"body,omitempty"`
}

// NewResourceVMsInfoNotFound creates ResourceVMsInfoNotFound with default headers values
func NewResourceVMsInfoNotFound() *ResourceVMsInfoNotFound {

	return &ResourceVMsInfoNotFound{}
}

// WithPayload adds the payload to the resource v ms info not found response
func (o *ResourceVMsInfoNotFound) WithPayload(payload *ResourceVMsInfoNotFoundBody) *ResourceVMsInfoNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the resource v ms info not found response
func (o *ResourceVMsInfoNotFound) SetPayload(payload *ResourceVMsInfoNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ResourceVMsInfoNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
