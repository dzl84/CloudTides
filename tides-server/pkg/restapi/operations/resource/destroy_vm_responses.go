// Code generated by go-swagger; DO NOT EDIT.

package resource

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// DestroyVMOKCode is the HTTP code returned for type DestroyVMOK
const DestroyVMOKCode int = 200

/*DestroyVMOK returns success message

swagger:response destroyVmOK
*/
type DestroyVMOK struct {

	/*
	  In: Body
	*/
	Payload *DestroyVMOKBody `json:"body,omitempty"`
}

// NewDestroyVMOK creates DestroyVMOK with default headers values
func NewDestroyVMOK() *DestroyVMOK {

	return &DestroyVMOK{}
}

// WithPayload adds the payload to the destroy Vm o k response
func (o *DestroyVMOK) WithPayload(payload *DestroyVMOKBody) *DestroyVMOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the destroy Vm o k response
func (o *DestroyVMOK) SetPayload(payload *DestroyVMOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DestroyVMOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DestroyVMNotFoundCode is the HTTP code returned for type DestroyVMNotFound
const DestroyVMNotFoundCode int = 404

/*DestroyVMNotFound resource not found

swagger:response destroyVmNotFound
*/
type DestroyVMNotFound struct {

	/*
	  In: Body
	*/
	Payload *DestroyVMNotFoundBody `json:"body,omitempty"`
}

// NewDestroyVMNotFound creates DestroyVMNotFound with default headers values
func NewDestroyVMNotFound() *DestroyVMNotFound {

	return &DestroyVMNotFound{}
}

// WithPayload adds the payload to the destroy Vm not found response
func (o *DestroyVMNotFound) WithPayload(payload *DestroyVMNotFoundBody) *DestroyVMNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the destroy Vm not found response
func (o *DestroyVMNotFound) SetPayload(payload *DestroyVMNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DestroyVMNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
