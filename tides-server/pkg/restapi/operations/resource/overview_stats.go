// Code generated by go-swagger; DO NOT EDIT.

package resource

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// OverviewStatsHandlerFunc turns a function with the right signature into a overview stats handler
type OverviewStatsHandlerFunc func(OverviewStatsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn OverviewStatsHandlerFunc) Handle(params OverviewStatsParams) middleware.Responder {
	return fn(params)
}

// OverviewStatsHandler interface for that can handle valid overview stats params
type OverviewStatsHandler interface {
	Handle(OverviewStatsParams) middleware.Responder
}

// NewOverviewStats creates a new http.Handler for the overview stats operation
func NewOverviewStats(ctx *middleware.Context, handler OverviewStatsHandler) *OverviewStats {
	return &OverviewStats{Context: ctx, Handler: handler}
}

/*OverviewStats swagger:route GET /resource/overview resource overviewStats

returns overall contribution statistics for a user

*/
type OverviewStats struct {
	Context *middleware.Context
	Handler OverviewStatsHandler
}

func (o *OverviewStats) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewOverviewStatsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// OverviewStatsNotFoundBody overview stats not found body
//
// swagger:model OverviewStatsNotFoundBody
type OverviewStatsNotFoundBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this overview stats not found body
func (o *OverviewStatsNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OverviewStatsNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OverviewStatsNotFoundBody) UnmarshalBinary(b []byte) error {
	var res OverviewStatsNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// OverviewStatsOKBody overview stats o k body
//
// swagger:model OverviewStatsOKBody
type OverviewStatsOKBody struct {

	// message
	Message string `json:"message,omitempty"`

	// results
	Results *OverviewStatsOKBodyResults `json:"results,omitempty"`
}

// Validate validates this overview stats o k body
func (o *OverviewStatsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateResults(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *OverviewStatsOKBody) validateResults(formats strfmt.Registry) error {

	if swag.IsZero(o.Results) { // not required
		return nil
	}

	if o.Results != nil {
		if err := o.Results.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("overviewStatsOK" + "." + "results")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *OverviewStatsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OverviewStatsOKBody) UnmarshalBinary(b []byte) error {
	var res OverviewStatsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// OverviewStatsOKBodyResults overview stats o k body results
//
// swagger:model OverviewStatsOKBodyResults
type OverviewStatsOKBodyResults struct {

	// contribution
	Contribution float64 `json:"contribution,omitempty"`

	// power
	Power float64 `json:"power,omitempty"`

	// resource
	Resource *OverviewStatsOKBodyResultsResource `json:"resource,omitempty"`

	// workload
	Workload *OverviewStatsOKBodyResultsWorkload `json:"workload,omitempty"`
}

// Validate validates this overview stats o k body results
func (o *OverviewStatsOKBodyResults) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateResource(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateWorkload(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *OverviewStatsOKBodyResults) validateResource(formats strfmt.Registry) error {

	if swag.IsZero(o.Resource) { // not required
		return nil
	}

	if o.Resource != nil {
		if err := o.Resource.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("overviewStatsOK" + "." + "results" + "." + "resource")
			}
			return err
		}
	}

	return nil
}

func (o *OverviewStatsOKBodyResults) validateWorkload(formats strfmt.Registry) error {

	if swag.IsZero(o.Workload) { // not required
		return nil
	}

	if o.Workload != nil {
		if err := o.Workload.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("overviewStatsOK" + "." + "results" + "." + "workload")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *OverviewStatsOKBodyResults) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OverviewStatsOKBodyResults) UnmarshalBinary(b []byte) error {
	var res OverviewStatsOKBodyResults
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// OverviewStatsOKBodyResultsResource overview stats o k body results resource
//
// swagger:model OverviewStatsOKBodyResultsResource
type OverviewStatsOKBodyResultsResource struct {

	// contributing
	Contributing int64 `json:"contributing,omitempty"`

	// hosts
	Hosts int64 `json:"hosts,omitempty"`

	// vms
	Vms int64 `json:"vms,omitempty"`
}

// Validate validates this overview stats o k body results resource
func (o *OverviewStatsOKBodyResultsResource) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OverviewStatsOKBodyResultsResource) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OverviewStatsOKBodyResultsResource) UnmarshalBinary(b []byte) error {
	var res OverviewStatsOKBodyResultsResource
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// OverviewStatsOKBodyResultsWorkload overview stats o k body results workload
//
// swagger:model OverviewStatsOKBodyResultsWorkload
type OverviewStatsOKBodyResultsWorkload struct {

	// contributed
	Contributed int64 `json:"contributed,omitempty"`

	// destroyed
	Destroyed int64 `json:"destroyed,omitempty"`

	// hosts used
	HostsUsed int64 `json:"hostsUsed,omitempty"`

	// running
	Running int64 `json:"running,omitempty"`
}

// Validate validates this overview stats o k body results workload
func (o *OverviewStatsOKBodyResultsWorkload) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OverviewStatsOKBodyResultsWorkload) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OverviewStatsOKBodyResultsWorkload) UnmarshalBinary(b []byte) error {
	var res OverviewStatsOKBodyResultsWorkload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
