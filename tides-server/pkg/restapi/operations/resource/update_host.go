// Code generated by go-swagger; DO NOT EDIT.

package resource

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UpdateHostHandlerFunc turns a function with the right signature into a update host handler
type UpdateHostHandlerFunc func(UpdateHostParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateHostHandlerFunc) Handle(params UpdateHostParams) middleware.Responder {
	return fn(params)
}

// UpdateHostHandler interface for that can handle valid update host params
type UpdateHostHandler interface {
	Handle(UpdateHostParams) middleware.Responder
}

// NewUpdateHost creates a new http.Handler for the update host operation
func NewUpdateHost(ctx *middleware.Context, handler UpdateHostHandler) *UpdateHost {
	return &UpdateHost{Context: ctx, Handler: handler}
}

/*UpdateHost swagger:route PUT /resource/update resource updateHost

update usage info of host

*/
type UpdateHost struct {
	Context *middleware.Context
	Handler UpdateHostHandler
}

func (o *UpdateHost) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdateHostParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// UpdateHostBody update host body
//
// swagger:model UpdateHostBody
type UpdateHostBody struct {

	// current CPU
	CurrentCPU float64 `json:"currentCPU,omitempty"`

	// current RAM
	CurrentRAM float64 `json:"currentRAM,omitempty"`

	// host address
	HostAddress string `json:"hostAddress,omitempty"`

	// host name
	HostName string `json:"hostName,omitempty"`
}

// Validate validates this update host body
func (o *UpdateHostBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateHostBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateHostBody) UnmarshalBinary(b []byte) error {
	var res UpdateHostBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// UpdateHostNotFoundBody update host not found body
//
// swagger:model UpdateHostNotFoundBody
type UpdateHostNotFoundBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this update host not found body
func (o *UpdateHostNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateHostNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateHostNotFoundBody) UnmarshalBinary(b []byte) error {
	var res UpdateHostNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// UpdateHostOKBody update host o k body
//
// swagger:model UpdateHostOKBody
type UpdateHostOKBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this update host o k body
func (o *UpdateHostOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateHostOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateHostOKBody) UnmarshalBinary(b []byte) error {
	var res UpdateHostOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
