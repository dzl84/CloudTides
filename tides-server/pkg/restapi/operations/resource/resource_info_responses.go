// Code generated by go-swagger; DO NOT EDIT.

package resource

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// ResourceInfoOKCode is the HTTP code returned for type ResourceInfoOK
const ResourceInfoOKCode int = 200

/*ResourceInfoOK returns detailed info of resources belonging to a user

swagger:response resourceInfoOK
*/
type ResourceInfoOK struct {

	/*
	  In: Body
	*/
	Payload *ResourceInfoOKBody `json:"body,omitempty"`
}

// NewResourceInfoOK creates ResourceInfoOK with default headers values
func NewResourceInfoOK() *ResourceInfoOK {

	return &ResourceInfoOK{}
}

// WithPayload adds the payload to the resource info o k response
func (o *ResourceInfoOK) WithPayload(payload *ResourceInfoOKBody) *ResourceInfoOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the resource info o k response
func (o *ResourceInfoOK) SetPayload(payload *ResourceInfoOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ResourceInfoOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ResourceInfoUnauthorizedCode is the HTTP code returned for type ResourceInfoUnauthorized
const ResourceInfoUnauthorizedCode int = 401

/*ResourceInfoUnauthorized Unauthorized

swagger:response resourceInfoUnauthorized
*/
type ResourceInfoUnauthorized struct {
}

// NewResourceInfoUnauthorized creates ResourceInfoUnauthorized with default headers values
func NewResourceInfoUnauthorized() *ResourceInfoUnauthorized {

	return &ResourceInfoUnauthorized{}
}

// WriteResponse to the client
func (o *ResourceInfoUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// ResourceInfoNotFoundCode is the HTTP code returned for type ResourceInfoNotFound
const ResourceInfoNotFoundCode int = 404

/*ResourceInfoNotFound resource not found

swagger:response resourceInfoNotFound
*/
type ResourceInfoNotFound struct {

	/*
	  In: Body
	*/
	Payload *ResourceInfoNotFoundBody `json:"body,omitempty"`
}

// NewResourceInfoNotFound creates ResourceInfoNotFound with default headers values
func NewResourceInfoNotFound() *ResourceInfoNotFound {

	return &ResourceInfoNotFound{}
}

// WithPayload adds the payload to the resource info not found response
func (o *ResourceInfoNotFound) WithPayload(payload *ResourceInfoNotFoundBody) *ResourceInfoNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the resource info not found response
func (o *ResourceInfoNotFound) SetPayload(payload *ResourceInfoNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ResourceInfoNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
