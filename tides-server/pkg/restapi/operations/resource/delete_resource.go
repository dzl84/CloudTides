// Code generated by go-swagger; DO NOT EDIT.

package resource

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DeleteResourceHandlerFunc turns a function with the right signature into a delete resource handler
type DeleteResourceHandlerFunc func(DeleteResourceParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteResourceHandlerFunc) Handle(params DeleteResourceParams) middleware.Responder {
	return fn(params)
}

// DeleteResourceHandler interface for that can handle valid delete resource params
type DeleteResourceHandler interface {
	Handle(DeleteResourceParams) middleware.Responder
}

// NewDeleteResource creates a new http.Handler for the delete resource operation
func NewDeleteResource(ctx *middleware.Context, handler DeleteResourceHandler) *DeleteResource {
	return &DeleteResource{Context: ctx, Handler: handler}
}

/*DeleteResource swagger:route DELETE /resource/delete resource deleteResource

delete specified resource

*/
type DeleteResource struct {
	Context *middleware.Context
	Handler DeleteResourceHandler
}

func (o *DeleteResource) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteResourceParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// DeleteResourceBody delete resource body
//
// swagger:model DeleteResourceBody
type DeleteResourceBody struct {

	// id
	ID int64 `json:"id,omitempty"`
}

// Validate validates this delete resource body
func (o *DeleteResourceBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteResourceBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteResourceBody) UnmarshalBinary(b []byte) error {
	var res DeleteResourceBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// DeleteResourceNotFoundBody delete resource not found body
//
// swagger:model DeleteResourceNotFoundBody
type DeleteResourceNotFoundBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this delete resource not found body
func (o *DeleteResourceNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteResourceNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteResourceNotFoundBody) UnmarshalBinary(b []byte) error {
	var res DeleteResourceNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// DeleteResourceOKBody delete resource o k body
//
// swagger:model DeleteResourceOKBody
type DeleteResourceOKBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this delete resource o k body
func (o *DeleteResourceOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteResourceOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteResourceOKBody) UnmarshalBinary(b []byte) error {
	var res DeleteResourceOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
